<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAA9NJREFUeF7t
        ms1vVFUYxu9G/g8ItmOpLQ3VtnaqBAXaCYGY+oEBEUFoaBcsWJC4cMFipjTEBAgmQuJCo6kfJUKQDxVj
        JezduNb0dhoS/4iH88JzBu693tPTM+fOLeb8kl/S58z7nvedRaczzUSBQCAQCAQCgUDAC1vexoZN0zi7
        cRorSpRsc9MMZmUnrlc8m09gVol15TQaXK94KsfRrEwBlWN4hUel0XUc1Ue7qJ14VDy9xwCRsXQ6vs/W
        o4DIGG39CDWVY33eAeOBI5jg+Mw+hTN4BBAZJcf6rIMucXxmH2vklXP4Q5wdOYyV4cPAWuU1UToXjbf5
        1UOYVcJVXiP3JHLReJv/2iE0t78P7Di4tldz6REZM7lovM1/4wAgMlqT7nO9xxVv88ffA0RGa9J9rve4
        4m3+nv2AyGhNus/1Hle8zd/3DiAySq4pY32+mmzL3GPi9H3cVyLHeywz0s78BJNvASKj5Fif2ci2zD0m
        6ouASZYZaWd+gncnAZExk/Nw7RMu/QaYZJmRduYnOPAmIDJmch6ufcJXPwMmWWaknfkJPtgHiIyZnIdr
        n3D9FmCSZUbamZ/g6F5AZMzkPFz7hMUbgEmWGWlnfoKpPYDImMl5uPYJf/4ImGSZkXbmJ5ipASJjJufh
        2if8s4B7fy8A/+lV/MEyI+3MT3ByHBAZJcf6zEa2Ze4pGm/zT+0GRMbo1C5MqLykz1eTbZl7isbb/NM7
        1bsvJaM16T7Xe1zxNv/j1wGR0Zp0n+s9rnib/8kOQGRs5TxZltvHWDje5p/ZDoiMrZwny3L7GAvH2/z6
        q+oDiJLRmnSf+jnWZx209U9RfcZoz9wYIDJak+47N4oJlZf0eQdcmqtinOOdn0f06SggMrZynizL9JWN
        8z4XRgCRsZXzZJnUNSWfH0KVR6VxYRRjssvFESzzyJ7PhgGR0ZpLI2jo3nXjEOpcz57LLwMiozXfbcGG
        K0NoXH4JTX1HiS6rPeqyE9ez54tBQGT0hu97i9oz+nIbIDJ6w/e9Re0ZfT0AiIzWfL4Nz30zgHOq9199
        R4k2lbNOvwLf9gMiozXzfZjTvevF+X6Hb4gs9AEiY/TDi6ipHOvz1fy+t/xviFztR5X7rP0bItd6AZFR
        cqzPbGRb6Tjv81MPIDJmch6r1d16ATX1eKzrPBjf7HnyjZA0uo7RnjsVNJX4pevxOzr5WXz0oAFV8+Dp
        vjTqsVjf5c3uJx9+nuZ2D8ZYs/Z3gncraNztBv4P/trl8E7wL/WnY7ELjcXn0VTiGXX5982oy3Ph0woE
        AoFAIBAIBAJCFD0EYqWM21qvPT8AAAAASUVORK5CYII=
</value>
  </data>
</root>