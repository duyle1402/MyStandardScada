//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace StandardScada {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SCADA_LVDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SCADA_LVDataSet : global::System.Data.DataSet {
        
        private SCADA_DATA_TABLEDataTable tableSCADA_DATA_TABLE;
        
        private SCADA_STATUS_TABLEDataTable tableSCADA_STATUS_TABLE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SCADA_LVDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SCADA_LVDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SCADA_DATA_TABLE"] != null)) {
                    base.Tables.Add(new SCADA_DATA_TABLEDataTable(ds.Tables["SCADA_DATA_TABLE"]));
                }
                if ((ds.Tables["SCADA_STATUS_TABLE"] != null)) {
                    base.Tables.Add(new SCADA_STATUS_TABLEDataTable(ds.Tables["SCADA_STATUS_TABLE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SCADA_DATA_TABLEDataTable SCADA_DATA_TABLE {
            get {
                return this.tableSCADA_DATA_TABLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SCADA_STATUS_TABLEDataTable SCADA_STATUS_TABLE {
            get {
                return this.tableSCADA_STATUS_TABLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SCADA_LVDataSet cln = ((SCADA_LVDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SCADA_DATA_TABLE"] != null)) {
                    base.Tables.Add(new SCADA_DATA_TABLEDataTable(ds.Tables["SCADA_DATA_TABLE"]));
                }
                if ((ds.Tables["SCADA_STATUS_TABLE"] != null)) {
                    base.Tables.Add(new SCADA_STATUS_TABLEDataTable(ds.Tables["SCADA_STATUS_TABLE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSCADA_DATA_TABLE = ((SCADA_DATA_TABLEDataTable)(base.Tables["SCADA_DATA_TABLE"]));
            if ((initTable == true)) {
                if ((this.tableSCADA_DATA_TABLE != null)) {
                    this.tableSCADA_DATA_TABLE.InitVars();
                }
            }
            this.tableSCADA_STATUS_TABLE = ((SCADA_STATUS_TABLEDataTable)(base.Tables["SCADA_STATUS_TABLE"]));
            if ((initTable == true)) {
                if ((this.tableSCADA_STATUS_TABLE != null)) {
                    this.tableSCADA_STATUS_TABLE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SCADA_LVDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SCADA_LVDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSCADA_DATA_TABLE = new SCADA_DATA_TABLEDataTable();
            base.Tables.Add(this.tableSCADA_DATA_TABLE);
            this.tableSCADA_STATUS_TABLE = new SCADA_STATUS_TABLEDataTable();
            base.Tables.Add(this.tableSCADA_STATUS_TABLE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSCADA_DATA_TABLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSCADA_STATUS_TABLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SCADA_LVDataSet ds = new SCADA_LVDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SCADA_DATA_TABLERowChangeEventHandler(object sender, SCADA_DATA_TABLERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SCADA_STATUS_TABLERowChangeEventHandler(object sender, SCADA_STATUS_TABLERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SCADA_DATA_TABLEDataTable : global::System.Data.TypedTableBase<SCADA_DATA_TABLERow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTIMEDATE;
            
            private global::System.Data.DataColumn columnMIX1_LEVEL;
            
            private global::System.Data.DataColumn columnMIX2_LEVEL;
            
            private global::System.Data.DataColumn columnMIX3_LEVEL;
            
            private global::System.Data.DataColumn columnMIX4_LEVEL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_DATA_TABLEDataTable() {
                this.TableName = "SCADA_DATA_TABLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SCADA_DATA_TABLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SCADA_DATA_TABLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMEDATEColumn {
                get {
                    return this.columnTIMEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIX1_LEVELColumn {
                get {
                    return this.columnMIX1_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIX2_LEVELColumn {
                get {
                    return this.columnMIX2_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIX3_LEVELColumn {
                get {
                    return this.columnMIX3_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIX4_LEVELColumn {
                get {
                    return this.columnMIX4_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_DATA_TABLERow this[int index] {
                get {
                    return ((SCADA_DATA_TABLERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCADA_DATA_TABLERowChangeEventHandler SCADA_DATA_TABLERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCADA_DATA_TABLERowChangeEventHandler SCADA_DATA_TABLERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCADA_DATA_TABLERowChangeEventHandler SCADA_DATA_TABLERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCADA_DATA_TABLERowChangeEventHandler SCADA_DATA_TABLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSCADA_DATA_TABLERow(SCADA_DATA_TABLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_DATA_TABLERow AddSCADA_DATA_TABLERow(System.DateTime TIMEDATE, float MIX1_LEVEL, float MIX2_LEVEL, float MIX3_LEVEL, float MIX4_LEVEL) {
                SCADA_DATA_TABLERow rowSCADA_DATA_TABLERow = ((SCADA_DATA_TABLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TIMEDATE,
                        MIX1_LEVEL,
                        MIX2_LEVEL,
                        MIX3_LEVEL,
                        MIX4_LEVEL};
                rowSCADA_DATA_TABLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSCADA_DATA_TABLERow);
                return rowSCADA_DATA_TABLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_DATA_TABLERow FindByID(int ID) {
                return ((SCADA_DATA_TABLERow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SCADA_DATA_TABLEDataTable cln = ((SCADA_DATA_TABLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SCADA_DATA_TABLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTIMEDATE = base.Columns["TIMEDATE"];
                this.columnMIX1_LEVEL = base.Columns["MIX1_LEVEL"];
                this.columnMIX2_LEVEL = base.Columns["MIX2_LEVEL"];
                this.columnMIX3_LEVEL = base.Columns["MIX3_LEVEL"];
                this.columnMIX4_LEVEL = base.Columns["MIX4_LEVEL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTIMEDATE = new global::System.Data.DataColumn("TIMEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEDATE);
                this.columnMIX1_LEVEL = new global::System.Data.DataColumn("MIX1_LEVEL", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIX1_LEVEL);
                this.columnMIX2_LEVEL = new global::System.Data.DataColumn("MIX2_LEVEL", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIX2_LEVEL);
                this.columnMIX3_LEVEL = new global::System.Data.DataColumn("MIX3_LEVEL", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIX3_LEVEL);
                this.columnMIX4_LEVEL = new global::System.Data.DataColumn("MIX4_LEVEL", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIX4_LEVEL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_DATA_TABLERow NewSCADA_DATA_TABLERow() {
                return ((SCADA_DATA_TABLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SCADA_DATA_TABLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SCADA_DATA_TABLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SCADA_DATA_TABLERowChanged != null)) {
                    this.SCADA_DATA_TABLERowChanged(this, new SCADA_DATA_TABLERowChangeEvent(((SCADA_DATA_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SCADA_DATA_TABLERowChanging != null)) {
                    this.SCADA_DATA_TABLERowChanging(this, new SCADA_DATA_TABLERowChangeEvent(((SCADA_DATA_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SCADA_DATA_TABLERowDeleted != null)) {
                    this.SCADA_DATA_TABLERowDeleted(this, new SCADA_DATA_TABLERowChangeEvent(((SCADA_DATA_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SCADA_DATA_TABLERowDeleting != null)) {
                    this.SCADA_DATA_TABLERowDeleting(this, new SCADA_DATA_TABLERowChangeEvent(((SCADA_DATA_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSCADA_DATA_TABLERow(SCADA_DATA_TABLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SCADA_LVDataSet ds = new SCADA_LVDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SCADA_DATA_TABLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SCADA_STATUS_TABLEDataTable : global::System.Data.TypedTableBase<SCADA_STATUS_TABLERow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTIMEDATE;
            
            private global::System.Data.DataColumn columnVALVE1_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE2_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE3_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE4_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE5_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE6_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE7_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE8_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE9_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE10_ON_OFF;
            
            private global::System.Data.DataColumn columnVALVE11_ON_OFF;
            
            private global::System.Data.DataColumn columnMIX1_ON_OFF;
            
            private global::System.Data.DataColumn columnMIX2_ON_OFF;
            
            private global::System.Data.DataColumn columnMIX3_ON_OFF;
            
            private global::System.Data.DataColumn columnMIX4_ON_OFF;
            
            private global::System.Data.DataColumn columnMOTOR_ON_OFF;
            
            private global::System.Data.DataColumn columnSTOP_ON_OFF;
            
            private global::System.Data.DataColumn columnEMERGENCY_ON_OFF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_STATUS_TABLEDataTable() {
                this.TableName = "SCADA_STATUS_TABLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SCADA_STATUS_TABLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SCADA_STATUS_TABLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMEDATEColumn {
                get {
                    return this.columnTIMEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE1_ON_OFFColumn {
                get {
                    return this.columnVALVE1_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE2_ON_OFFColumn {
                get {
                    return this.columnVALVE2_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE3_ON_OFFColumn {
                get {
                    return this.columnVALVE3_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE4_ON_OFFColumn {
                get {
                    return this.columnVALVE4_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE5_ON_OFFColumn {
                get {
                    return this.columnVALVE5_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE6_ON_OFFColumn {
                get {
                    return this.columnVALVE6_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE7_ON_OFFColumn {
                get {
                    return this.columnVALVE7_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE8_ON_OFFColumn {
                get {
                    return this.columnVALVE8_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE9_ON_OFFColumn {
                get {
                    return this.columnVALVE9_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE10_ON_OFFColumn {
                get {
                    return this.columnVALVE10_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALVE11_ON_OFFColumn {
                get {
                    return this.columnVALVE11_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIX1_ON_OFFColumn {
                get {
                    return this.columnMIX1_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIX2_ON_OFFColumn {
                get {
                    return this.columnMIX2_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIX3_ON_OFFColumn {
                get {
                    return this.columnMIX3_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIX4_ON_OFFColumn {
                get {
                    return this.columnMIX4_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MOTOR_ON_OFFColumn {
                get {
                    return this.columnMOTOR_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOP_ON_OFFColumn {
                get {
                    return this.columnSTOP_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMERGENCY_ON_OFFColumn {
                get {
                    return this.columnEMERGENCY_ON_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_STATUS_TABLERow this[int index] {
                get {
                    return ((SCADA_STATUS_TABLERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCADA_STATUS_TABLERowChangeEventHandler SCADA_STATUS_TABLERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCADA_STATUS_TABLERowChangeEventHandler SCADA_STATUS_TABLERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCADA_STATUS_TABLERowChangeEventHandler SCADA_STATUS_TABLERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCADA_STATUS_TABLERowChangeEventHandler SCADA_STATUS_TABLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSCADA_STATUS_TABLERow(SCADA_STATUS_TABLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_STATUS_TABLERow AddSCADA_STATUS_TABLERow(
                        System.DateTime TIMEDATE, 
                        bool VALVE1_ON_OFF, 
                        bool VALVE2_ON_OFF, 
                        bool VALVE3_ON_OFF, 
                        bool VALVE4_ON_OFF, 
                        bool VALVE5_ON_OFF, 
                        bool VALVE6_ON_OFF, 
                        bool VALVE7_ON_OFF, 
                        bool VALVE8_ON_OFF, 
                        bool VALVE9_ON_OFF, 
                        bool VALVE10_ON_OFF, 
                        bool VALVE11_ON_OFF, 
                        bool MIX1_ON_OFF, 
                        bool MIX2_ON_OFF, 
                        bool MIX3_ON_OFF, 
                        bool MIX4_ON_OFF, 
                        bool MOTOR_ON_OFF, 
                        bool STOP_ON_OFF, 
                        bool EMERGENCY_ON_OFF) {
                SCADA_STATUS_TABLERow rowSCADA_STATUS_TABLERow = ((SCADA_STATUS_TABLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TIMEDATE,
                        VALVE1_ON_OFF,
                        VALVE2_ON_OFF,
                        VALVE3_ON_OFF,
                        VALVE4_ON_OFF,
                        VALVE5_ON_OFF,
                        VALVE6_ON_OFF,
                        VALVE7_ON_OFF,
                        VALVE8_ON_OFF,
                        VALVE9_ON_OFF,
                        VALVE10_ON_OFF,
                        VALVE11_ON_OFF,
                        MIX1_ON_OFF,
                        MIX2_ON_OFF,
                        MIX3_ON_OFF,
                        MIX4_ON_OFF,
                        MOTOR_ON_OFF,
                        STOP_ON_OFF,
                        EMERGENCY_ON_OFF};
                rowSCADA_STATUS_TABLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSCADA_STATUS_TABLERow);
                return rowSCADA_STATUS_TABLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_STATUS_TABLERow FindByID(int ID) {
                return ((SCADA_STATUS_TABLERow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SCADA_STATUS_TABLEDataTable cln = ((SCADA_STATUS_TABLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SCADA_STATUS_TABLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTIMEDATE = base.Columns["TIMEDATE"];
                this.columnVALVE1_ON_OFF = base.Columns["VALVE1_ON_OFF"];
                this.columnVALVE2_ON_OFF = base.Columns["VALVE2_ON_OFF"];
                this.columnVALVE3_ON_OFF = base.Columns["VALVE3_ON_OFF"];
                this.columnVALVE4_ON_OFF = base.Columns["VALVE4_ON_OFF"];
                this.columnVALVE5_ON_OFF = base.Columns["VALVE5_ON_OFF"];
                this.columnVALVE6_ON_OFF = base.Columns["VALVE6_ON_OFF"];
                this.columnVALVE7_ON_OFF = base.Columns["VALVE7_ON_OFF"];
                this.columnVALVE8_ON_OFF = base.Columns["VALVE8_ON_OFF"];
                this.columnVALVE9_ON_OFF = base.Columns["VALVE9_ON_OFF"];
                this.columnVALVE10_ON_OFF = base.Columns["VALVE10_ON_OFF"];
                this.columnVALVE11_ON_OFF = base.Columns["VALVE11_ON_OFF"];
                this.columnMIX1_ON_OFF = base.Columns["MIX1_ON_OFF"];
                this.columnMIX2_ON_OFF = base.Columns["MIX2_ON_OFF"];
                this.columnMIX3_ON_OFF = base.Columns["MIX3_ON_OFF"];
                this.columnMIX4_ON_OFF = base.Columns["MIX4_ON_OFF"];
                this.columnMOTOR_ON_OFF = base.Columns["MOTOR_ON_OFF"];
                this.columnSTOP_ON_OFF = base.Columns["STOP_ON_OFF"];
                this.columnEMERGENCY_ON_OFF = base.Columns["EMERGENCY_ON_OFF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTIMEDATE = new global::System.Data.DataColumn("TIMEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEDATE);
                this.columnVALVE1_ON_OFF = new global::System.Data.DataColumn("VALVE1_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE1_ON_OFF);
                this.columnVALVE2_ON_OFF = new global::System.Data.DataColumn("VALVE2_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE2_ON_OFF);
                this.columnVALVE3_ON_OFF = new global::System.Data.DataColumn("VALVE3_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE3_ON_OFF);
                this.columnVALVE4_ON_OFF = new global::System.Data.DataColumn("VALVE4_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE4_ON_OFF);
                this.columnVALVE5_ON_OFF = new global::System.Data.DataColumn("VALVE5_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE5_ON_OFF);
                this.columnVALVE6_ON_OFF = new global::System.Data.DataColumn("VALVE6_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE6_ON_OFF);
                this.columnVALVE7_ON_OFF = new global::System.Data.DataColumn("VALVE7_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE7_ON_OFF);
                this.columnVALVE8_ON_OFF = new global::System.Data.DataColumn("VALVE8_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE8_ON_OFF);
                this.columnVALVE9_ON_OFF = new global::System.Data.DataColumn("VALVE9_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE9_ON_OFF);
                this.columnVALVE10_ON_OFF = new global::System.Data.DataColumn("VALVE10_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE10_ON_OFF);
                this.columnVALVE11_ON_OFF = new global::System.Data.DataColumn("VALVE11_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALVE11_ON_OFF);
                this.columnMIX1_ON_OFF = new global::System.Data.DataColumn("MIX1_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIX1_ON_OFF);
                this.columnMIX2_ON_OFF = new global::System.Data.DataColumn("MIX2_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIX2_ON_OFF);
                this.columnMIX3_ON_OFF = new global::System.Data.DataColumn("MIX3_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIX3_ON_OFF);
                this.columnMIX4_ON_OFF = new global::System.Data.DataColumn("MIX4_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIX4_ON_OFF);
                this.columnMOTOR_ON_OFF = new global::System.Data.DataColumn("MOTOR_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOTOR_ON_OFF);
                this.columnSTOP_ON_OFF = new global::System.Data.DataColumn("STOP_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOP_ON_OFF);
                this.columnEMERGENCY_ON_OFF = new global::System.Data.DataColumn("EMERGENCY_ON_OFF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMERGENCY_ON_OFF);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_STATUS_TABLERow NewSCADA_STATUS_TABLERow() {
                return ((SCADA_STATUS_TABLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SCADA_STATUS_TABLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SCADA_STATUS_TABLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SCADA_STATUS_TABLERowChanged != null)) {
                    this.SCADA_STATUS_TABLERowChanged(this, new SCADA_STATUS_TABLERowChangeEvent(((SCADA_STATUS_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SCADA_STATUS_TABLERowChanging != null)) {
                    this.SCADA_STATUS_TABLERowChanging(this, new SCADA_STATUS_TABLERowChangeEvent(((SCADA_STATUS_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SCADA_STATUS_TABLERowDeleted != null)) {
                    this.SCADA_STATUS_TABLERowDeleted(this, new SCADA_STATUS_TABLERowChangeEvent(((SCADA_STATUS_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SCADA_STATUS_TABLERowDeleting != null)) {
                    this.SCADA_STATUS_TABLERowDeleting(this, new SCADA_STATUS_TABLERowChangeEvent(((SCADA_STATUS_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSCADA_STATUS_TABLERow(SCADA_STATUS_TABLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SCADA_LVDataSet ds = new SCADA_LVDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SCADA_STATUS_TABLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SCADA_DATA_TABLERow : global::System.Data.DataRow {
            
            private SCADA_DATA_TABLEDataTable tableSCADA_DATA_TABLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SCADA_DATA_TABLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSCADA_DATA_TABLE = ((SCADA_DATA_TABLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableSCADA_DATA_TABLE.IDColumn]));
                }
                set {
                    this[this.tableSCADA_DATA_TABLE.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSCADA_DATA_TABLE.TIMEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIMEDATE\' in table \'SCADA_DATA_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_DATA_TABLE.TIMEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MIX1_LEVEL {
                get {
                    try {
                        return ((float)(this[this.tableSCADA_DATA_TABLE.MIX1_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIX1_LEVEL\' in table \'SCADA_DATA_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_DATA_TABLE.MIX1_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MIX2_LEVEL {
                get {
                    try {
                        return ((float)(this[this.tableSCADA_DATA_TABLE.MIX2_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIX2_LEVEL\' in table \'SCADA_DATA_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_DATA_TABLE.MIX2_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MIX3_LEVEL {
                get {
                    try {
                        return ((float)(this[this.tableSCADA_DATA_TABLE.MIX3_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIX3_LEVEL\' in table \'SCADA_DATA_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_DATA_TABLE.MIX3_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MIX4_LEVEL {
                get {
                    try {
                        return ((float)(this[this.tableSCADA_DATA_TABLE.MIX4_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIX4_LEVEL\' in table \'SCADA_DATA_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_DATA_TABLE.MIX4_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTIMEDATENull() {
                return this.IsNull(this.tableSCADA_DATA_TABLE.TIMEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTIMEDATENull() {
                this[this.tableSCADA_DATA_TABLE.TIMEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIX1_LEVELNull() {
                return this.IsNull(this.tableSCADA_DATA_TABLE.MIX1_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIX1_LEVELNull() {
                this[this.tableSCADA_DATA_TABLE.MIX1_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIX2_LEVELNull() {
                return this.IsNull(this.tableSCADA_DATA_TABLE.MIX2_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIX2_LEVELNull() {
                this[this.tableSCADA_DATA_TABLE.MIX2_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIX3_LEVELNull() {
                return this.IsNull(this.tableSCADA_DATA_TABLE.MIX3_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIX3_LEVELNull() {
                this[this.tableSCADA_DATA_TABLE.MIX3_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIX4_LEVELNull() {
                return this.IsNull(this.tableSCADA_DATA_TABLE.MIX4_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIX4_LEVELNull() {
                this[this.tableSCADA_DATA_TABLE.MIX4_LEVELColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SCADA_STATUS_TABLERow : global::System.Data.DataRow {
            
            private SCADA_STATUS_TABLEDataTable tableSCADA_STATUS_TABLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SCADA_STATUS_TABLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSCADA_STATUS_TABLE = ((SCADA_STATUS_TABLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableSCADA_STATUS_TABLE.IDColumn]));
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TIMEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSCADA_STATUS_TABLE.TIMEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIMEDATE\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.TIMEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE1_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE1_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE1_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE1_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE2_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE2_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE2_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE2_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE3_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE3_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE3_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE3_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE4_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE4_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE4_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE4_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE5_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE5_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE5_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE5_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE6_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE6_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE6_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE6_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE7_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE7_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE7_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE7_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE8_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE8_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE8_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE8_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE9_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE9_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE9_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE9_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE10_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE10_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE10_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE10_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VALVE11_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.VALVE11_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALVE11_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.VALVE11_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MIX1_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.MIX1_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIX1_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.MIX1_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MIX2_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.MIX2_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIX2_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.MIX2_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MIX3_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.MIX3_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIX3_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.MIX3_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MIX4_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.MIX4_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIX4_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.MIX4_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MOTOR_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.MOTOR_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOTOR_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.MOTOR_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool STOP_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.STOP_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOP_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.STOP_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EMERGENCY_ON_OFF {
                get {
                    try {
                        return ((bool)(this[this.tableSCADA_STATUS_TABLE.EMERGENCY_ON_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMERGENCY_ON_OFF\' in table \'SCADA_STATUS_TABLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCADA_STATUS_TABLE.EMERGENCY_ON_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTIMEDATENull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.TIMEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTIMEDATENull() {
                this[this.tableSCADA_STATUS_TABLE.TIMEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE1_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE1_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE1_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE1_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE2_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE2_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE2_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE2_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE3_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE3_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE3_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE3_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE4_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE4_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE4_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE4_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE5_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE5_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE5_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE5_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE6_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE6_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE6_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE6_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE7_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE7_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE7_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE7_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE8_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE8_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE8_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE8_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE9_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE9_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE9_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE9_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE10_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE10_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE10_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE10_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALVE11_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.VALVE11_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALVE11_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.VALVE11_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIX1_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.MIX1_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIX1_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.MIX1_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIX2_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.MIX2_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIX2_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.MIX2_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIX3_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.MIX3_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIX3_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.MIX3_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIX4_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.MIX4_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIX4_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.MIX4_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMOTOR_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.MOTOR_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMOTOR_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.MOTOR_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOP_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.STOP_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOP_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.STOP_ON_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEMERGENCY_ON_OFFNull() {
                return this.IsNull(this.tableSCADA_STATUS_TABLE.EMERGENCY_ON_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEMERGENCY_ON_OFFNull() {
                this[this.tableSCADA_STATUS_TABLE.EMERGENCY_ON_OFFColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SCADA_DATA_TABLERowChangeEvent : global::System.EventArgs {
            
            private SCADA_DATA_TABLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_DATA_TABLERowChangeEvent(SCADA_DATA_TABLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_DATA_TABLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SCADA_STATUS_TABLERowChangeEvent : global::System.EventArgs {
            
            private SCADA_STATUS_TABLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_STATUS_TABLERowChangeEvent(SCADA_STATUS_TABLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCADA_STATUS_TABLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace StandardScada.SCADA_LVDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SCADA_DATA_TABLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SCADA_DATA_TABLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SCADA_DATA_TABLE";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("TIMEDATE", "TIMEDATE");
            tableMapping.ColumnMappings.Add("MIX1_LEVEL", "MIX1_LEVEL");
            tableMapping.ColumnMappings.Add("MIX2_LEVEL", "MIX2_LEVEL");
            tableMapping.ColumnMappings.Add("MIX3_LEVEL", "MIX3_LEVEL");
            tableMapping.ColumnMappings.Add("MIX4_LEVEL", "MIX4_LEVEL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SCADA_DATA_TABLE] WHERE (([ID] = @Original_ID) AND ((@IsNull_TIMEDATE = 1 AND [TIMEDATE] IS NULL) OR ([TIMEDATE] = @Original_TIMEDATE)) AND ((@IsNull_MIX1_LEVEL = 1 AND [MIX1_LEVEL] IS NULL) OR ([MIX1_LEVEL] = @Original_MIX1_LEVEL)) AND ((@IsNull_MIX2_LEVEL = 1 AND [MIX2_LEVEL] IS NULL) OR ([MIX2_LEVEL] = @Original_MIX2_LEVEL)) AND ((@IsNull_MIX3_LEVEL = 1 AND [MIX3_LEVEL] IS NULL) OR ([MIX3_LEVEL] = @Original_MIX3_LEVEL)) AND ((@IsNull_MIX4_LEVEL = 1 AND [MIX4_LEVEL] IS NULL) OR ([MIX4_LEVEL] = @Original_MIX4_LEVEL)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TIMEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIMEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX1_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX1_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX2_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX2_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX3_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX3_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX4_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX4_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SCADA_DATA_TABLE] ([TIMEDATE], [MIX1_LEVEL], [MIX2_LEVEL], [MIX3_LEVEL], [MIX4_LEVEL]) VALUES (@TIMEDATE, @MIX1_LEVEL, @MIX2_LEVEL, @MIX3_LEVEL, @MIX4_LEVEL);
SELECT ID, TIMEDATE, MIX1_LEVEL, MIX2_LEVEL, MIX3_LEVEL, MIX4_LEVEL FROM SCADA_DATA_TABLE WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIMEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX1_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX2_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX3_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX4_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SCADA_DATA_TABLE] SET [TIMEDATE] = @TIMEDATE, [MIX1_LEVEL] = @MIX1_LEVEL, [MIX2_LEVEL] = @MIX2_LEVEL, [MIX3_LEVEL] = @MIX3_LEVEL, [MIX4_LEVEL] = @MIX4_LEVEL WHERE (([ID] = @Original_ID) AND ((@IsNull_TIMEDATE = 1 AND [TIMEDATE] IS NULL) OR ([TIMEDATE] = @Original_TIMEDATE)) AND ((@IsNull_MIX1_LEVEL = 1 AND [MIX1_LEVEL] IS NULL) OR ([MIX1_LEVEL] = @Original_MIX1_LEVEL)) AND ((@IsNull_MIX2_LEVEL = 1 AND [MIX2_LEVEL] IS NULL) OR ([MIX2_LEVEL] = @Original_MIX2_LEVEL)) AND ((@IsNull_MIX3_LEVEL = 1 AND [MIX3_LEVEL] IS NULL) OR ([MIX3_LEVEL] = @Original_MIX3_LEVEL)) AND ((@IsNull_MIX4_LEVEL = 1 AND [MIX4_LEVEL] IS NULL) OR ([MIX4_LEVEL] = @Original_MIX4_LEVEL)));
SELECT ID, TIMEDATE, MIX1_LEVEL, MIX2_LEVEL, MIX3_LEVEL, MIX4_LEVEL FROM SCADA_DATA_TABLE WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIMEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX1_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX2_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX3_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX4_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TIMEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIMEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX1_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX1_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX2_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX2_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX3_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX3_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX4_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX4_LEVEL", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::StandardScada.Properties.Settings.Default.SCADA_LVConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, TIMEDATE, MIX1_LEVEL, MIX2_LEVEL, MIX3_LEVEL, MIX4_LEVEL FROM dbo.SCAD" +
                "A_DATA_TABLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SCADA_LVDataSet.SCADA_DATA_TABLEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SCADA_LVDataSet.SCADA_DATA_TABLEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SCADA_LVDataSet.SCADA_DATA_TABLEDataTable dataTable = new SCADA_LVDataSet.SCADA_DATA_TABLEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SCADA_LVDataSet.SCADA_DATA_TABLEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SCADA_LVDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SCADA_DATA_TABLE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, global::System.Nullable<global::System.DateTime> Original_TIMEDATE, global::System.Nullable<float> Original_MIX1_LEVEL, global::System.Nullable<float> Original_MIX2_LEVEL, global::System.Nullable<float> Original_MIX3_LEVEL, global::System.Nullable<float> Original_MIX4_LEVEL) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_TIMEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_TIMEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX1_LEVEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((float)(Original_MIX1_LEVEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX2_LEVEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((float)(Original_MIX2_LEVEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX3_LEVEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((float)(Original_MIX3_LEVEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX4_LEVEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((float)(Original_MIX4_LEVEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> TIMEDATE, global::System.Nullable<float> MIX1_LEVEL, global::System.Nullable<float> MIX2_LEVEL, global::System.Nullable<float> MIX3_LEVEL, global::System.Nullable<float> MIX4_LEVEL) {
            if ((TIMEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(TIMEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MIX1_LEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((float)(MIX1_LEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((MIX2_LEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((float)(MIX2_LEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MIX3_LEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((float)(MIX3_LEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MIX4_LEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((float)(MIX4_LEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> TIMEDATE, global::System.Nullable<float> MIX1_LEVEL, global::System.Nullable<float> MIX2_LEVEL, global::System.Nullable<float> MIX3_LEVEL, global::System.Nullable<float> MIX4_LEVEL, int Original_ID, global::System.Nullable<global::System.DateTime> Original_TIMEDATE, global::System.Nullable<float> Original_MIX1_LEVEL, global::System.Nullable<float> Original_MIX2_LEVEL, global::System.Nullable<float> Original_MIX3_LEVEL, global::System.Nullable<float> Original_MIX4_LEVEL, int ID) {
            if ((TIMEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(TIMEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MIX1_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((float)(MIX1_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((MIX2_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((float)(MIX2_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MIX3_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((float)(MIX3_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MIX4_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(MIX4_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID));
            if ((Original_TIMEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_TIMEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX1_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(Original_MIX1_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX2_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(Original_MIX2_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX3_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((float)(Original_MIX3_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX4_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((float)(Original_MIX4_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> TIMEDATE, global::System.Nullable<float> MIX1_LEVEL, global::System.Nullable<float> MIX2_LEVEL, global::System.Nullable<float> MIX3_LEVEL, global::System.Nullable<float> MIX4_LEVEL, int Original_ID, global::System.Nullable<global::System.DateTime> Original_TIMEDATE, global::System.Nullable<float> Original_MIX1_LEVEL, global::System.Nullable<float> Original_MIX2_LEVEL, global::System.Nullable<float> Original_MIX3_LEVEL, global::System.Nullable<float> Original_MIX4_LEVEL) {
            return this.Update(TIMEDATE, MIX1_LEVEL, MIX2_LEVEL, MIX3_LEVEL, MIX4_LEVEL, Original_ID, Original_TIMEDATE, Original_MIX1_LEVEL, Original_MIX2_LEVEL, Original_MIX3_LEVEL, Original_MIX4_LEVEL, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SCADA_STATUS_TABLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SCADA_STATUS_TABLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SCADA_STATUS_TABLE";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("TIMEDATE", "TIMEDATE");
            tableMapping.ColumnMappings.Add("VALVE1_ON_OFF", "VALVE1_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE2_ON_OFF", "VALVE2_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE3_ON_OFF", "VALVE3_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE4_ON_OFF", "VALVE4_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE5_ON_OFF", "VALVE5_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE6_ON_OFF", "VALVE6_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE7_ON_OFF", "VALVE7_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE8_ON_OFF", "VALVE8_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE9_ON_OFF", "VALVE9_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE10_ON_OFF", "VALVE10_ON_OFF");
            tableMapping.ColumnMappings.Add("VALVE11_ON_OFF", "VALVE11_ON_OFF");
            tableMapping.ColumnMappings.Add("MIX1_ON_OFF", "MIX1_ON_OFF");
            tableMapping.ColumnMappings.Add("MIX2_ON_OFF", "MIX2_ON_OFF");
            tableMapping.ColumnMappings.Add("MIX3_ON_OFF", "MIX3_ON_OFF");
            tableMapping.ColumnMappings.Add("MIX4_ON_OFF", "MIX4_ON_OFF");
            tableMapping.ColumnMappings.Add("MOTOR_ON_OFF", "MOTOR_ON_OFF");
            tableMapping.ColumnMappings.Add("STOP_ON_OFF", "STOP_ON_OFF");
            tableMapping.ColumnMappings.Add("EMERGENCY_ON_OFF", "EMERGENCY_ON_OFF");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SCADA_STATUS_TABLE] WHERE (([ID] = @Original_ID) AND ((@IsNull" +
                "_TIMEDATE = 1 AND [TIMEDATE] IS NULL) OR ([TIMEDATE] = @Original_TIMEDATE)) AND " +
                "((@IsNull_VALVE1_ON_OFF = 1 AND [VALVE1_ON_OFF] IS NULL) OR ([VALVE1_ON_OFF] = @" +
                "Original_VALVE1_ON_OFF)) AND ((@IsNull_VALVE2_ON_OFF = 1 AND [VALVE2_ON_OFF] IS " +
                "NULL) OR ([VALVE2_ON_OFF] = @Original_VALVE2_ON_OFF)) AND ((@IsNull_VALVE3_ON_OF" +
                "F = 1 AND [VALVE3_ON_OFF] IS NULL) OR ([VALVE3_ON_OFF] = @Original_VALVE3_ON_OFF" +
                ")) AND ((@IsNull_VALVE4_ON_OFF = 1 AND [VALVE4_ON_OFF] IS NULL) OR ([VALVE4_ON_O" +
                "FF] = @Original_VALVE4_ON_OFF)) AND ((@IsNull_VALVE5_ON_OFF = 1 AND [VALVE5_ON_O" +
                "FF] IS NULL) OR ([VALVE5_ON_OFF] = @Original_VALVE5_ON_OFF)) AND ((@IsNull_VALVE" +
                "6_ON_OFF = 1 AND [VALVE6_ON_OFF] IS NULL) OR ([VALVE6_ON_OFF] = @Original_VALVE6" +
                "_ON_OFF)) AND ((@IsNull_VALVE7_ON_OFF = 1 AND [VALVE7_ON_OFF] IS NULL) OR ([VALV" +
                "E7_ON_OFF] = @Original_VALVE7_ON_OFF)) AND ((@IsNull_VALVE8_ON_OFF = 1 AND [VALV" +
                "E8_ON_OFF] IS NULL) OR ([VALVE8_ON_OFF] = @Original_VALVE8_ON_OFF)) AND ((@IsNul" +
                "l_VALVE9_ON_OFF = 1 AND [VALVE9_ON_OFF] IS NULL) OR ([VALVE9_ON_OFF] = @Original" +
                "_VALVE9_ON_OFF)) AND ((@IsNull_VALVE10_ON_OFF = 1 AND [VALVE10_ON_OFF] IS NULL) " +
                "OR ([VALVE10_ON_OFF] = @Original_VALVE10_ON_OFF)) AND ((@IsNull_VALVE11_ON_OFF =" +
                " 1 AND [VALVE11_ON_OFF] IS NULL) OR ([VALVE11_ON_OFF] = @Original_VALVE11_ON_OFF" +
                ")) AND ((@IsNull_MIX1_ON_OFF = 1 AND [MIX1_ON_OFF] IS NULL) OR ([MIX1_ON_OFF] = " +
                "@Original_MIX1_ON_OFF)) AND ((@IsNull_MIX2_ON_OFF = 1 AND [MIX2_ON_OFF] IS NULL)" +
                " OR ([MIX2_ON_OFF] = @Original_MIX2_ON_OFF)) AND ((@IsNull_MIX3_ON_OFF = 1 AND [" +
                "MIX3_ON_OFF] IS NULL) OR ([MIX3_ON_OFF] = @Original_MIX3_ON_OFF)) AND ((@IsNull_" +
                "MIX4_ON_OFF = 1 AND [MIX4_ON_OFF] IS NULL) OR ([MIX4_ON_OFF] = @Original_MIX4_ON" +
                "_OFF)) AND ((@IsNull_MOTOR_ON_OFF = 1 AND [MOTOR_ON_OFF] IS NULL) OR ([MOTOR_ON_" +
                "OFF] = @Original_MOTOR_ON_OFF)) AND ((@IsNull_STOP_ON_OFF = 1 AND [STOP_ON_OFF] " +
                "IS NULL) OR ([STOP_ON_OFF] = @Original_STOP_ON_OFF)) AND ((@IsNull_EMERGENCY_ON_" +
                "OFF = 1 AND [EMERGENCY_ON_OFF] IS NULL) OR ([EMERGENCY_ON_OFF] = @Original_EMERG" +
                "ENCY_ON_OFF)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TIMEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIMEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE1_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE1_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE1_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE1_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE2_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE2_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE2_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE2_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE3_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE3_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE3_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE3_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE4_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE4_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE4_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE4_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE5_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE5_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE5_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE5_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE6_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE6_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE6_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE6_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE7_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE7_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE7_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE7_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE8_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE8_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE8_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE8_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE9_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE9_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE9_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE9_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE10_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE10_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE10_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE10_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE11_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE11_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE11_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE11_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX1_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX1_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX2_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX2_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX3_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX3_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX4_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX4_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MOTOR_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOTOR_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOTOR_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOTOR_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOP_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOP_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOP_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOP_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMERGENCY_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMERGENCY_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMERGENCY_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMERGENCY_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SCADA_STATUS_TABLE] ([TIMEDATE], [VALVE1_ON_OFF], [VALVE2_ON_OFF], [VALVE3_ON_OFF], [VALVE4_ON_OFF], [VALVE5_ON_OFF], [VALVE6_ON_OFF], [VALVE7_ON_OFF], [VALVE8_ON_OFF], [VALVE9_ON_OFF], [VALVE10_ON_OFF], [VALVE11_ON_OFF], [MIX1_ON_OFF], [MIX2_ON_OFF], [MIX3_ON_OFF], [MIX4_ON_OFF], [MOTOR_ON_OFF], [STOP_ON_OFF], [EMERGENCY_ON_OFF]) VALUES (@TIMEDATE, @VALVE1_ON_OFF, @VALVE2_ON_OFF, @VALVE3_ON_OFF, @VALVE4_ON_OFF, @VALVE5_ON_OFF, @VALVE6_ON_OFF, @VALVE7_ON_OFF, @VALVE8_ON_OFF, @VALVE9_ON_OFF, @VALVE10_ON_OFF, @VALVE11_ON_OFF, @MIX1_ON_OFF, @MIX2_ON_OFF, @MIX3_ON_OFF, @MIX4_ON_OFF, @MOTOR_ON_OFF, @STOP_ON_OFF, @EMERGENCY_ON_OFF);
SELECT ID, TIMEDATE, VALVE1_ON_OFF, VALVE2_ON_OFF, VALVE3_ON_OFF, VALVE4_ON_OFF, VALVE5_ON_OFF, VALVE6_ON_OFF, VALVE7_ON_OFF, VALVE8_ON_OFF, VALVE9_ON_OFF, VALVE10_ON_OFF, VALVE11_ON_OFF, MIX1_ON_OFF, MIX2_ON_OFF, MIX3_ON_OFF, MIX4_ON_OFF, MOTOR_ON_OFF, STOP_ON_OFF, EMERGENCY_ON_OFF FROM SCADA_STATUS_TABLE WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIMEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE1_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE1_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE2_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE2_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE3_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE3_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE4_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE4_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE5_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE5_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE6_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE6_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE7_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE7_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE8_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE8_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE9_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE9_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE10_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE10_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE11_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE11_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX1_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX2_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX3_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX4_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOTOR_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOTOR_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOP_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOP_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMERGENCY_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMERGENCY_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SCADA_STATUS_TABLE] SET [TIMEDATE] = @TIMEDATE, [VALVE1_ON_OFF] = @" +
                "VALVE1_ON_OFF, [VALVE2_ON_OFF] = @VALVE2_ON_OFF, [VALVE3_ON_OFF] = @VALVE3_ON_OF" +
                "F, [VALVE4_ON_OFF] = @VALVE4_ON_OFF, [VALVE5_ON_OFF] = @VALVE5_ON_OFF, [VALVE6_O" +
                "N_OFF] = @VALVE6_ON_OFF, [VALVE7_ON_OFF] = @VALVE7_ON_OFF, [VALVE8_ON_OFF] = @VA" +
                "LVE8_ON_OFF, [VALVE9_ON_OFF] = @VALVE9_ON_OFF, [VALVE10_ON_OFF] = @VALVE10_ON_OF" +
                "F, [VALVE11_ON_OFF] = @VALVE11_ON_OFF, [MIX1_ON_OFF] = @MIX1_ON_OFF, [MIX2_ON_OF" +
                "F] = @MIX2_ON_OFF, [MIX3_ON_OFF] = @MIX3_ON_OFF, [MIX4_ON_OFF] = @MIX4_ON_OFF, [" +
                "MOTOR_ON_OFF] = @MOTOR_ON_OFF, [STOP_ON_OFF] = @STOP_ON_OFF, [EMERGENCY_ON_OFF] " +
                "= @EMERGENCY_ON_OFF WHERE (([ID] = @Original_ID) AND ((@IsNull_TIMEDATE = 1 AND " +
                "[TIMEDATE] IS NULL) OR ([TIMEDATE] = @Original_TIMEDATE)) AND ((@IsNull_VALVE1_O" +
                "N_OFF = 1 AND [VALVE1_ON_OFF] IS NULL) OR ([VALVE1_ON_OFF] = @Original_VALVE1_ON" +
                "_OFF)) AND ((@IsNull_VALVE2_ON_OFF = 1 AND [VALVE2_ON_OFF] IS NULL) OR ([VALVE2_" +
                "ON_OFF] = @Original_VALVE2_ON_OFF)) AND ((@IsNull_VALVE3_ON_OFF = 1 AND [VALVE3_" +
                "ON_OFF] IS NULL) OR ([VALVE3_ON_OFF] = @Original_VALVE3_ON_OFF)) AND ((@IsNull_V" +
                "ALVE4_ON_OFF = 1 AND [VALVE4_ON_OFF] IS NULL) OR ([VALVE4_ON_OFF] = @Original_VA" +
                "LVE4_ON_OFF)) AND ((@IsNull_VALVE5_ON_OFF = 1 AND [VALVE5_ON_OFF] IS NULL) OR ([" +
                "VALVE5_ON_OFF] = @Original_VALVE5_ON_OFF)) AND ((@IsNull_VALVE6_ON_OFF = 1 AND [" +
                "VALVE6_ON_OFF] IS NULL) OR ([VALVE6_ON_OFF] = @Original_VALVE6_ON_OFF)) AND ((@I" +
                "sNull_VALVE7_ON_OFF = 1 AND [VALVE7_ON_OFF] IS NULL) OR ([VALVE7_ON_OFF] = @Orig" +
                "inal_VALVE7_ON_OFF)) AND ((@IsNull_VALVE8_ON_OFF = 1 AND [VALVE8_ON_OFF] IS NULL" +
                ") OR ([VALVE8_ON_OFF] = @Original_VALVE8_ON_OFF)) AND ((@IsNull_VALVE9_ON_OFF = " +
                "1 AND [VALVE9_ON_OFF] IS NULL) OR ([VALVE9_ON_OFF] = @Original_VALVE9_ON_OFF)) A" +
                "ND ((@IsNull_VALVE10_ON_OFF = 1 AND [VALVE10_ON_OFF] IS NULL) OR ([VALVE10_ON_OF" +
                "F] = @Original_VALVE10_ON_OFF)) AND ((@IsNull_VALVE11_ON_OFF = 1 AND [VALVE11_ON" +
                "_OFF] IS NULL) OR ([VALVE11_ON_OFF] = @Original_VALVE11_ON_OFF)) AND ((@IsNull_M" +
                "IX1_ON_OFF = 1 AND [MIX1_ON_OFF] IS NULL) OR ([MIX1_ON_OFF] = @Original_MIX1_ON_" +
                "OFF)) AND ((@IsNull_MIX2_ON_OFF = 1 AND [MIX2_ON_OFF] IS NULL) OR ([MIX2_ON_OFF]" +
                " = @Original_MIX2_ON_OFF)) AND ((@IsNull_MIX3_ON_OFF = 1 AND [MIX3_ON_OFF] IS NU" +
                "LL) OR ([MIX3_ON_OFF] = @Original_MIX3_ON_OFF)) AND ((@IsNull_MIX4_ON_OFF = 1 AN" +
                "D [MIX4_ON_OFF] IS NULL) OR ([MIX4_ON_OFF] = @Original_MIX4_ON_OFF)) AND ((@IsNu" +
                "ll_MOTOR_ON_OFF = 1 AND [MOTOR_ON_OFF] IS NULL) OR ([MOTOR_ON_OFF] = @Original_M" +
                "OTOR_ON_OFF)) AND ((@IsNull_STOP_ON_OFF = 1 AND [STOP_ON_OFF] IS NULL) OR ([STOP" +
                "_ON_OFF] = @Original_STOP_ON_OFF)) AND ((@IsNull_EMERGENCY_ON_OFF = 1 AND [EMERG" +
                "ENCY_ON_OFF] IS NULL) OR ([EMERGENCY_ON_OFF] = @Original_EMERGENCY_ON_OFF)));\r\nS" +
                "ELECT ID, TIMEDATE, VALVE1_ON_OFF, VALVE2_ON_OFF, VALVE3_ON_OFF, VALVE4_ON_OFF, " +
                "VALVE5_ON_OFF, VALVE6_ON_OFF, VALVE7_ON_OFF, VALVE8_ON_OFF, VALVE9_ON_OFF, VALVE" +
                "10_ON_OFF, VALVE11_ON_OFF, MIX1_ON_OFF, MIX2_ON_OFF, MIX3_ON_OFF, MIX4_ON_OFF, M" +
                "OTOR_ON_OFF, STOP_ON_OFF, EMERGENCY_ON_OFF FROM SCADA_STATUS_TABLE WHERE (ID = @" +
                "ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIMEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE1_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE1_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE2_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE2_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE3_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE3_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE4_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE4_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE5_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE5_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE6_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE6_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE7_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE7_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE8_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE8_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE9_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE9_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE10_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE10_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALVE11_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE11_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX1_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX2_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX3_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIX4_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOTOR_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOTOR_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOP_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOP_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMERGENCY_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMERGENCY_ON_OFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TIMEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIMEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE1_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE1_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE1_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE1_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE2_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE2_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE2_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE2_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE3_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE3_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE3_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE3_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE4_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE4_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE4_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE4_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE5_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE5_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE5_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE5_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE6_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE6_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE6_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE6_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE7_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE7_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE7_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE7_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE8_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE8_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE8_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE8_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE9_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE9_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE9_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE9_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE10_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE10_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE10_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE10_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALVE11_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE11_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALVE11_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALVE11_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX1_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX1_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX1_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX2_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX2_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX2_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX3_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX3_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX3_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MIX4_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIX4_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIX4_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MOTOR_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOTOR_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOTOR_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOTOR_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOP_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOP_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOP_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOP_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMERGENCY_ON_OFF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMERGENCY_ON_OFF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMERGENCY_ON_OFF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMERGENCY_ON_OFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::StandardScada.Properties.Settings.Default.SCADA_LVConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, TIMEDATE, VALVE1_ON_OFF, VALVE2_ON_OFF, VALVE3_ON_OFF, VALVE4_ON_OFF, VALVE5_ON_OFF, VALVE6_ON_OFF, VALVE7_ON_OFF, VALVE8_ON_OFF, VALVE9_ON_OFF, VALVE10_ON_OFF, VALVE11_ON_OFF, MIX1_ON_OFF, MIX2_ON_OFF, MIX3_ON_OFF, MIX4_ON_OFF, MOTOR_ON_OFF, STOP_ON_OFF, EMERGENCY_ON_OFF FROM dbo.SCADA_STATUS_TABLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SCADA_LVDataSet.SCADA_STATUS_TABLEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SCADA_LVDataSet.SCADA_STATUS_TABLEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SCADA_LVDataSet.SCADA_STATUS_TABLEDataTable dataTable = new SCADA_LVDataSet.SCADA_STATUS_TABLEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SCADA_LVDataSet.SCADA_STATUS_TABLEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SCADA_LVDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SCADA_STATUS_TABLE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    global::System.Nullable<global::System.DateTime> Original_TIMEDATE, 
                    global::System.Nullable<bool> Original_VALVE1_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE2_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE3_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE4_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE5_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE6_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE7_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE8_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE9_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE10_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE11_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX1_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX2_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX3_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX4_ON_OFF, 
                    global::System.Nullable<bool> Original_MOTOR_ON_OFF, 
                    global::System.Nullable<bool> Original_STOP_ON_OFF, 
                    global::System.Nullable<bool> Original_EMERGENCY_ON_OFF) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_TIMEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_TIMEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE1_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_VALVE1_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE2_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_VALVE2_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE3_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_VALVE3_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE4_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_VALVE4_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE5_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_VALVE5_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE6_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_VALVE6_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE7_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_VALVE7_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE8_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_VALVE8_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE9_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_VALVE9_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE10_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_VALVE10_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE11_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_VALVE11_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX1_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_MIX1_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX2_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_MIX2_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX3_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_MIX3_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX4_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_MIX4_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_MOTOR_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((bool)(Original_MOTOR_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_STOP_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_STOP_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_EMERGENCY_ON_OFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_EMERGENCY_ON_OFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<global::System.DateTime> TIMEDATE, 
                    global::System.Nullable<bool> VALVE1_ON_OFF, 
                    global::System.Nullable<bool> VALVE2_ON_OFF, 
                    global::System.Nullable<bool> VALVE3_ON_OFF, 
                    global::System.Nullable<bool> VALVE4_ON_OFF, 
                    global::System.Nullable<bool> VALVE5_ON_OFF, 
                    global::System.Nullable<bool> VALVE6_ON_OFF, 
                    global::System.Nullable<bool> VALVE7_ON_OFF, 
                    global::System.Nullable<bool> VALVE8_ON_OFF, 
                    global::System.Nullable<bool> VALVE9_ON_OFF, 
                    global::System.Nullable<bool> VALVE10_ON_OFF, 
                    global::System.Nullable<bool> VALVE11_ON_OFF, 
                    global::System.Nullable<bool> MIX1_ON_OFF, 
                    global::System.Nullable<bool> MIX2_ON_OFF, 
                    global::System.Nullable<bool> MIX3_ON_OFF, 
                    global::System.Nullable<bool> MIX4_ON_OFF, 
                    global::System.Nullable<bool> MOTOR_ON_OFF, 
                    global::System.Nullable<bool> STOP_ON_OFF, 
                    global::System.Nullable<bool> EMERGENCY_ON_OFF) {
            if ((TIMEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(TIMEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VALVE1_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(VALVE1_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((VALVE2_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(VALVE2_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((VALVE3_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(VALVE3_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((VALVE4_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(VALVE4_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((VALVE5_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(VALVE5_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VALVE6_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(VALVE6_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((VALVE7_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(VALVE7_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((VALVE8_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(VALVE8_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((VALVE9_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(VALVE9_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((VALVE10_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(VALVE10_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((VALVE11_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(VALVE11_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MIX1_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(MIX1_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MIX2_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(MIX2_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MIX3_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(MIX3_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MIX4_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(MIX4_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MOTOR_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(MOTOR_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((STOP_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(STOP_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((EMERGENCY_ON_OFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(EMERGENCY_ON_OFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> TIMEDATE, 
                    global::System.Nullable<bool> VALVE1_ON_OFF, 
                    global::System.Nullable<bool> VALVE2_ON_OFF, 
                    global::System.Nullable<bool> VALVE3_ON_OFF, 
                    global::System.Nullable<bool> VALVE4_ON_OFF, 
                    global::System.Nullable<bool> VALVE5_ON_OFF, 
                    global::System.Nullable<bool> VALVE6_ON_OFF, 
                    global::System.Nullable<bool> VALVE7_ON_OFF, 
                    global::System.Nullable<bool> VALVE8_ON_OFF, 
                    global::System.Nullable<bool> VALVE9_ON_OFF, 
                    global::System.Nullable<bool> VALVE10_ON_OFF, 
                    global::System.Nullable<bool> VALVE11_ON_OFF, 
                    global::System.Nullable<bool> MIX1_ON_OFF, 
                    global::System.Nullable<bool> MIX2_ON_OFF, 
                    global::System.Nullable<bool> MIX3_ON_OFF, 
                    global::System.Nullable<bool> MIX4_ON_OFF, 
                    global::System.Nullable<bool> MOTOR_ON_OFF, 
                    global::System.Nullable<bool> STOP_ON_OFF, 
                    global::System.Nullable<bool> EMERGENCY_ON_OFF, 
                    int Original_ID, 
                    global::System.Nullable<global::System.DateTime> Original_TIMEDATE, 
                    global::System.Nullable<bool> Original_VALVE1_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE2_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE3_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE4_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE5_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE6_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE7_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE8_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE9_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE10_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE11_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX1_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX2_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX3_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX4_ON_OFF, 
                    global::System.Nullable<bool> Original_MOTOR_ON_OFF, 
                    global::System.Nullable<bool> Original_STOP_ON_OFF, 
                    global::System.Nullable<bool> Original_EMERGENCY_ON_OFF, 
                    int ID) {
            if ((TIMEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(TIMEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VALVE1_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(VALVE1_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((VALVE2_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(VALVE2_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((VALVE3_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(VALVE3_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((VALVE4_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(VALVE4_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((VALVE5_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(VALVE5_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VALVE6_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(VALVE6_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((VALVE7_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(VALVE7_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((VALVE8_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(VALVE8_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((VALVE9_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(VALVE9_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((VALVE10_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(VALVE10_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((VALVE11_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(VALVE11_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MIX1_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(MIX1_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MIX2_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(MIX2_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MIX3_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(MIX3_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MIX4_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(MIX4_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MOTOR_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(MOTOR_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((STOP_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(STOP_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((EMERGENCY_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(EMERGENCY_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ID));
            if ((Original_TIMEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_TIMEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE1_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Original_VALVE1_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE2_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(Original_VALVE2_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE3_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(Original_VALVE3_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE4_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_VALVE4_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE5_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Original_VALVE5_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE6_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(Original_VALVE6_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE7_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Original_VALVE7_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE8_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Original_VALVE8_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE9_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_VALVE9_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE10_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(Original_VALVE10_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_VALVE11_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(Original_VALVE11_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX1_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(Original_MIX1_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX2_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(Original_MIX2_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX3_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(Original_MIX3_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_MIX4_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_MIX4_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_MOTOR_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(Original_MOTOR_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_STOP_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(Original_STOP_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_EMERGENCY_ON_OFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(Original_EMERGENCY_ON_OFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> TIMEDATE, 
                    global::System.Nullable<bool> VALVE1_ON_OFF, 
                    global::System.Nullable<bool> VALVE2_ON_OFF, 
                    global::System.Nullable<bool> VALVE3_ON_OFF, 
                    global::System.Nullable<bool> VALVE4_ON_OFF, 
                    global::System.Nullable<bool> VALVE5_ON_OFF, 
                    global::System.Nullable<bool> VALVE6_ON_OFF, 
                    global::System.Nullable<bool> VALVE7_ON_OFF, 
                    global::System.Nullable<bool> VALVE8_ON_OFF, 
                    global::System.Nullable<bool> VALVE9_ON_OFF, 
                    global::System.Nullable<bool> VALVE10_ON_OFF, 
                    global::System.Nullable<bool> VALVE11_ON_OFF, 
                    global::System.Nullable<bool> MIX1_ON_OFF, 
                    global::System.Nullable<bool> MIX2_ON_OFF, 
                    global::System.Nullable<bool> MIX3_ON_OFF, 
                    global::System.Nullable<bool> MIX4_ON_OFF, 
                    global::System.Nullable<bool> MOTOR_ON_OFF, 
                    global::System.Nullable<bool> STOP_ON_OFF, 
                    global::System.Nullable<bool> EMERGENCY_ON_OFF, 
                    int Original_ID, 
                    global::System.Nullable<global::System.DateTime> Original_TIMEDATE, 
                    global::System.Nullable<bool> Original_VALVE1_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE2_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE3_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE4_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE5_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE6_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE7_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE8_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE9_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE10_ON_OFF, 
                    global::System.Nullable<bool> Original_VALVE11_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX1_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX2_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX3_ON_OFF, 
                    global::System.Nullable<bool> Original_MIX4_ON_OFF, 
                    global::System.Nullable<bool> Original_MOTOR_ON_OFF, 
                    global::System.Nullable<bool> Original_STOP_ON_OFF, 
                    global::System.Nullable<bool> Original_EMERGENCY_ON_OFF) {
            return this.Update(TIMEDATE, VALVE1_ON_OFF, VALVE2_ON_OFF, VALVE3_ON_OFF, VALVE4_ON_OFF, VALVE5_ON_OFF, VALVE6_ON_OFF, VALVE7_ON_OFF, VALVE8_ON_OFF, VALVE9_ON_OFF, VALVE10_ON_OFF, VALVE11_ON_OFF, MIX1_ON_OFF, MIX2_ON_OFF, MIX3_ON_OFF, MIX4_ON_OFF, MOTOR_ON_OFF, STOP_ON_OFF, EMERGENCY_ON_OFF, Original_ID, Original_TIMEDATE, Original_VALVE1_ON_OFF, Original_VALVE2_ON_OFF, Original_VALVE3_ON_OFF, Original_VALVE4_ON_OFF, Original_VALVE5_ON_OFF, Original_VALVE6_ON_OFF, Original_VALVE7_ON_OFF, Original_VALVE8_ON_OFF, Original_VALVE9_ON_OFF, Original_VALVE10_ON_OFF, Original_VALVE11_ON_OFF, Original_MIX1_ON_OFF, Original_MIX2_ON_OFF, Original_MIX3_ON_OFF, Original_MIX4_ON_OFF, Original_MOTOR_ON_OFF, Original_STOP_ON_OFF, Original_EMERGENCY_ON_OFF, Original_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SCADA_DATA_TABLETableAdapter _sCADA_DATA_TABLETableAdapter;
        
        private SCADA_STATUS_TABLETableAdapter _sCADA_STATUS_TABLETableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SCADA_DATA_TABLETableAdapter SCADA_DATA_TABLETableAdapter {
            get {
                return this._sCADA_DATA_TABLETableAdapter;
            }
            set {
                this._sCADA_DATA_TABLETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SCADA_STATUS_TABLETableAdapter SCADA_STATUS_TABLETableAdapter {
            get {
                return this._sCADA_STATUS_TABLETableAdapter;
            }
            set {
                this._sCADA_STATUS_TABLETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._sCADA_DATA_TABLETableAdapter != null) 
                            && (this._sCADA_DATA_TABLETableAdapter.Connection != null))) {
                    return this._sCADA_DATA_TABLETableAdapter.Connection;
                }
                if (((this._sCADA_STATUS_TABLETableAdapter != null) 
                            && (this._sCADA_STATUS_TABLETableAdapter.Connection != null))) {
                    return this._sCADA_STATUS_TABLETableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._sCADA_DATA_TABLETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sCADA_STATUS_TABLETableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(SCADA_LVDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sCADA_DATA_TABLETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SCADA_DATA_TABLE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sCADA_DATA_TABLETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sCADA_STATUS_TABLETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SCADA_STATUS_TABLE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sCADA_STATUS_TABLETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(SCADA_LVDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sCADA_DATA_TABLETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SCADA_DATA_TABLE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sCADA_DATA_TABLETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sCADA_STATUS_TABLETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SCADA_STATUS_TABLE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sCADA_STATUS_TABLETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(SCADA_LVDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sCADA_STATUS_TABLETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SCADA_STATUS_TABLE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sCADA_STATUS_TABLETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sCADA_DATA_TABLETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SCADA_DATA_TABLE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sCADA_DATA_TABLETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(SCADA_LVDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._sCADA_DATA_TABLETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sCADA_DATA_TABLETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sCADA_STATUS_TABLETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sCADA_STATUS_TABLETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._sCADA_DATA_TABLETableAdapter != null)) {
                    revertConnections.Add(this._sCADA_DATA_TABLETableAdapter, this._sCADA_DATA_TABLETableAdapter.Connection);
                    this._sCADA_DATA_TABLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sCADA_DATA_TABLETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sCADA_DATA_TABLETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sCADA_DATA_TABLETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sCADA_DATA_TABLETableAdapter.Adapter);
                    }
                }
                if ((this._sCADA_STATUS_TABLETableAdapter != null)) {
                    revertConnections.Add(this._sCADA_STATUS_TABLETableAdapter, this._sCADA_STATUS_TABLETableAdapter.Connection);
                    this._sCADA_STATUS_TABLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sCADA_STATUS_TABLETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sCADA_STATUS_TABLETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sCADA_STATUS_TABLETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sCADA_STATUS_TABLETableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._sCADA_DATA_TABLETableAdapter != null)) {
                    this._sCADA_DATA_TABLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sCADA_DATA_TABLETableAdapter]));
                    this._sCADA_DATA_TABLETableAdapter.Transaction = null;
                }
                if ((this._sCADA_STATUS_TABLETableAdapter != null)) {
                    this._sCADA_STATUS_TABLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sCADA_STATUS_TABLETableAdapter]));
                    this._sCADA_STATUS_TABLETableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591